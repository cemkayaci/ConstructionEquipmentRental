// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repository.Context;

namespace Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20190402182234_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Common.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CustomerName");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Common.Models.Equipment", b =>
                {
                    b.Property<int>("EquipmentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("EquipmentId");

                    b.ToTable("Equipments");

                    b.HasData(
                        new { EquipmentId = 1, Name = "Caterpillar bulldozer" },
                        new { EquipmentId = 2, Name = "KamAZ truck" },
                        new { EquipmentId = 3, Name = "Komatsu crane" },
                        new { EquipmentId = 4, Name = "Volvo steamroller" },
                        new { EquipmentId = 5, Name = "Bosch jackhammer" }
                    );
                });

            modelBuilder.Entity("Common.Models.Inventory", b =>
                {
                    b.Property<int>("InventoryId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EquipmentId");

                    b.Property<int>("TypeId");

                    b.HasKey("InventoryId");

                    b.HasIndex("EquipmentId");

                    b.HasIndex("TypeId");

                    b.ToTable("Inventories");

                    b.HasData(
                        new { InventoryId = 1, EquipmentId = 1, TypeId = 1 },
                        new { InventoryId = 2, EquipmentId = 2, TypeId = 2 },
                        new { InventoryId = 3, EquipmentId = 3, TypeId = 1 },
                        new { InventoryId = 4, EquipmentId = 4, TypeId = 2 },
                        new { InventoryId = 5, EquipmentId = 5, TypeId = 3 }
                    );
                });

            modelBuilder.Entity("Common.Models.Rent", b =>
                {
                    b.Property<int>("RentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerId");

                    b.Property<DateTime>("DateAdded");

                    b.HasKey("RentId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Rents");
                });

            modelBuilder.Entity("Common.Models.RentDetails", b =>
                {
                    b.Property<int>("RentDetailId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateAdded");

                    b.Property<int>("Days");

                    b.Property<int>("InventoryId");

                    b.Property<int>("LoyalityPoint");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("RentId");

                    b.HasKey("RentDetailId");

                    b.HasIndex("InventoryId");

                    b.HasIndex("RentId");

                    b.ToTable("RentDetails");
                });

            modelBuilder.Entity("Common.Models.Types", b =>
                {
                    b.Property<int>("TypeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("TypeId");

                    b.ToTable("Types");

                    b.HasData(
                        new { TypeId = 1, Name = "Heavy" },
                        new { TypeId = 2, Name = "Regular" },
                        new { TypeId = 3, Name = "Specialized" }
                    );
                });

            modelBuilder.Entity("Common.Models.Inventory", b =>
                {
                    b.HasOne("Common.Models.Equipment", "Equipment")
                        .WithMany("Inventories")
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Common.Models.Types", "Types")
                        .WithMany("Inventories")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Common.Models.Rent", b =>
                {
                    b.HasOne("Common.Models.Customer", "Customer")
                        .WithMany("Rents")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Common.Models.RentDetails", b =>
                {
                    b.HasOne("Common.Models.Inventory", "Inventory")
                        .WithMany("RentDetails")
                        .HasForeignKey("InventoryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Common.Models.Rent", "Rent")
                        .WithMany("RentDetails")
                        .HasForeignKey("RentId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
